generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Article {
  id          String   @id(map: "article_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  title       String   @unique @db.VarChar
  description String   @db.VarChar
  slug        String   @unique @db.VarChar
  image       String   @db.VarChar
}

model Meeting {
  id          String   @id(map: "meeting_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  startAt     DateTime @db.Timestamp(6)
  status      Boolean
  userId      String   @db.Uuid
  limitDate   String?  @db.VarChar
  paymentId   String?  @unique
  typeMeeting Json?    @db.Json
  link        String?
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "meeting_userid_fkey")
}

model User {
  id            String    @id(map: "user_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  mail          String    @unique @db.VarChar
  firstname     String    @db.VarChar
  lastname      String    @db.VarChar
  password      String    @db.VarChar
  registerToken Json?     @db.Json
  resetToken    Json?     @db.Json
  editEmail     Json?     @db.Json
  role          String    @db.VarChar
  twoFactor     Boolean
  status        Boolean
  twoFactorCode Json?     @db.Json
  meetingId     String?   @db.Uuid
  deleteToken   Json?     @db.Json
  discovery     Boolean
  typeMeeting   Json      @db.Json
  deleteReason  String?
  Meeting       Meeting[]
}
